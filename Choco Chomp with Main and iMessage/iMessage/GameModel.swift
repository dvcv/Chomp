//
//  GameModel.swift
//  Choco Chomp with Main and iMessage
//
//  Created by David Chavez on 3/4/17.
//  Copyright Â© 2017 David Chavez. All rights reserved.
//


import Foundation
import Messages

// This deletes the top and to the right points from original selection
struct GameModel{
    var matrix:[[Int]]
    
    var selectByTag:[Int:[Int]]
    
    
}
extension GameModel{
    
    
    init(model: String) {
        if(model == "Small"){
            let matrix = [[1,   2,  3],
                          [4,   5,  6],
                          [7,   8,  9],
                          [10,  11, 12],
                          [13,  14, 15],
                          [16,  17, 18]]
            let selectByTag = [1:[0,0],2:[0,1],3:[0,2],
                               4:[1,0],5:[1,1],6:[1,2],
                               7:[2,0],8:[2,1],9:[2,2],
                               10:[3,0],11:[3,1],12:[3,2],
                               13:[4,0],14:[4,1],15:[4,2],
                               16:[5,0],17:[5,1],18:[5,2]]
            self.init(matrix: matrix, selectByTag: selectByTag)
        }else if(model == "Medium"){
            let matrix = [[1,   2,  3 , 4 , 5],
                          [6,   7,  8,  9, 10],
                          [11,  12, 13, 14, 15],
                          [16,  17, 18, 19, 20],
                          [21,  22, 23, 24, 25],
                          [26,  27, 28, 29, 30],
                          [31,  32, 33, 34, 35],
                          [36,  37, 38, 39, 40]]
            let selectByTag = [1:[0,0],2:[0,1],3:[0,2],4:[0,3],5:[0,4],
                               
                               6:[1,0],7:[1,1],8:[1,2],9:[1,3],10:[1,4],
                               
                               11:[2,0], 12:[2,1],13:[2,2],14:[2,3], 15:[2,4],
                               
                               16:[3,0],17:[3,1],18:[3,2],19:[3,3],20:[3,4],
                               
                               21:[4,0],22:[4,1],23:[4,2],24:[4,3],25:[4,4],
                               
                               26:[5,0],27:[5,1],28:[5,2],29:[5,3],30:[5,4],
                               
                               31:[6,0],32:[6,1], 33:[6,2],34:[6,3],35:[6,4],
                               
                               36:[7,0],37:[7,1],38:[7,2], 39:[7,3],40:[7,4]]
            
            self.init(matrix: matrix, selectByTag: selectByTag)
        }else{
            let matrix = [[1,   2,  3 , 4 , 5 ,6 ,7],
                          [8,  9, 10, 11, 12, 13 , 14],
                          [15 ,16 ,17 ,18 ,19 ,20 ,21] ,
                          [22 ,23 ,24 ,25 ,26 ,27 ,28] ,
                          [29 ,30 ,31 ,32 ,33 ,34 ,35] ,
                          [36 ,37 ,38 ,39 ,40 ,41 ,42] ,
                          [43 ,44 ,45 ,46 ,47 ,48 ,49] ,
                          [50 ,51 ,52 ,53 ,54 ,55 ,56] ,
                          [57 ,58 ,59 ,60 ,61 ,62 ,63] ,
                          [64 ,65 ,66 ,67 ,68 ,69 ,70] ,
                          [71 ,72 ,73 ,74 ,75 ,76 ,77]]
            let selectByTag =
                [1:[0 ,0], 2:[0 ,1], 3:[0 ,2], 4:[0 ,3], 5:[0 ,4], 6:[0 ,5], 7:[0 ,6], 8:[1 ,0], 9:[1 ,1], 10:[1 ,2], 11:[1 ,3], 12:[1 ,4], 13:[1 ,5], 14:[1 ,6], 15:[2 ,0], 16:[2 ,1], 17:[2 ,2], 18:[2 ,3], 19:[2 ,4], 20:[2 ,5], 21:[2 ,6], 22:[3 ,0], 23:[3 ,1], 24:[3 ,2], 25:[3 ,3], 26:[3 ,4], 27:[3 ,5], 28:[3 ,6], 29:[4 ,0], 30:[4 ,1], 31:[4 ,2], 32:[4 ,3], 33:[4 ,4], 34:[4 ,5], 35:[4 ,6], 36:[5 ,0], 37:[5 ,1], 38:[5 ,2], 39:[5 ,3], 40:[5 ,4], 41:[5 ,5], 42:[5 ,6], 43:[6 ,0], 44:[6 ,1], 45:[6 ,2], 46:[6 ,3], 47:[6 ,4], 48:[6 ,5], 49:[6 ,6], 50:[7 ,0], 51:[7 ,1], 52:[7 ,2], 53:[7 ,3], 54:[7 ,4], 55:[7 ,5], 56:[7 ,6], 57:[8 ,0], 58:[8 ,1], 59:[8 ,2], 60:[8 ,3], 61:[8 ,4], 62:[8 ,5], 63:[8 ,6], 64:[9 ,0], 65:[9 ,1], 66:[9 ,2], 67:[9 ,3], 68:[9 ,4], 69:[9 ,5], 70:[9 ,6], 71:[10 ,0], 72:[10 ,1], 73:[10 ,2], 74:[10 ,3], 75:[10 ,4], 76:[10 ,5], 77:[10 ,6]]
            self.init(matrix: matrix, selectByTag: selectByTag)
        }
    }
}
